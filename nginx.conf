events {
    worker_connections 1024;
}

http {
    # This is the crucial line. It tells Nginx to use Docker's internal DNS server (127.0.0.11)
    # and to re-evaluate the DNS lookup every 30 seconds.
    resolver 127.0.0.11 valid=30s; 

    # Server for Jenkins
    server {
        listen 80;
        server_name jenkins.local;

        location / {
            # Use a variable for proxy_pass to enable dynamic resolution.
            # Nginx will not check if 'jenkins' is available at startup.
            set $upstream_jenkins ashok.jenkins:8080;
            proxy_pass http://$upstream_jenkins;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_http_version 1.1;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Upgrade $http_upgrade;
        }
    }

    # Server for Nexus
    server {
        listen 80;
        server_name nexus.local;

        location / {
            # Same dynamic resolution for Nexus.
            set $upstream_nexus ashok.nexus:8081;
            proxy_pass http://$upstream_nexus;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # Server for SonarQube
    server {
        listen 80;
        server_name sonarqube.local;

        location / {
            # Same dynamic resolution for SonarQube.
            set $upstream_sonarqube ashok.sonarqube:9000;
            proxy_pass http://$upstream_sonarqube;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
